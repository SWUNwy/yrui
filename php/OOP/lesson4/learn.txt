/**
 * 抽象 
 * 抽象方法和抽象类
 * 接口技术
 * 多态应用
 * 
 */

当类中有一个方法，既没有方法体，也没有花括号，直接以分号结束，这一类方法，我们称之为抽象方法，必须使用关键字abstract定义。
例如：public abstract function fun()
包含这种方法的类必须是抽象类也要使用关键字abstract加以声明。（即使用关键字abstract修饰的类为抽象类）
抽象类的特点：
1.不能实例化，也就是不能new成对象；
2.如果想使用抽象类，那就必须定义一个类去继承这个抽象类，并定义覆盖父类的抽象方法（实现抽象方法）；
******************************************************************
php与大多数面向对象编程语言一样，不支持多重继承，也就是说每个类只能继承一个父类，为了解决这个问题，php引入了接口，接口的思想是指定了一个实现了该类接口的类必须实现的一系列函数。

定义格式：
	interface 接口名称{
		//常量成员 (使用construct关键字定义)
		//抽象方法 (不需要使用abstract关键字)
	}
使用格式：
 class 类名 implements 接口名1，接口名2{......}
 *******************************************
 多态
 对象的多态性：是指在父类中定义的属性或行为被子类继承之后，可以具有不同的数据类型或表现出不同的行为。这使得同一个属性或行为在父类及其各个子类中具有不同的语义。
 